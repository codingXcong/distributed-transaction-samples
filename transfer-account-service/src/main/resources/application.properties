#通过spring.application.name属性，
#我们可以指定微服务的名称后续在调用的时候只需要使用该名称就可以进行服务的访问。
spring.application.name=account-service
#为了在本机上测试区分服务提供方和服务注册中心，使用server.port属性设置不同的端口。
server.port=2222

########################################################
###eureka
########################################################
eureka.client.serviceUrl.defaultZone=http://127.0.0.1:1111/eureka/

########################################################
###datasource
########################################################
spring.datasource.url = jdbc:mysql://localhost:3306/db_account?createDatabaseIfNotExist=true&serverTimezone=Asia/Shanghai
spring.datasource.username = root
spring.datasource.password = 123456
spring.datasource.driverClassName = com.mysql.cj.jdbc.Driver

########################################################
### Java Persistence Api
########################################################
# Specify the DBMS
spring.jpa.database = MYSQL
# Show or not log for each sql query
spring.jpa.show-sql = true
# Hibernate ddl auto (create, create-drop, update)
spring.jpa.hibernate.ddl-auto = update
# Naming strategy
#spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy
# stripped before adding them to the entity manager)
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL57InnoDBDialect
